"use strict"; function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var a=(t,e,o)=>new Promise((r,i)=>{var n=c=>{try{l(o.next(c))}catch(m){i(m)}},d=c=>{try{l(o.throw(c))}catch(m){i(m)}},l=c=>c.done?r(c.value):Promise.resolve(c.value).then(n,d);l((o=o.apply(t,e)).next())});var _fs = require('fs');var _readline = require('readline'); var _readline2 = _interopRequireDefault(_readline);var _chalk = require('chalk'); var _chalk2 = _interopRequireDefault(_chalk);var D=class{out(e){let o=this.messageToColoredString(e);console.log(o)}promptUserInput(e){return new Promise(o=>{let r=this.messageToColoredString(e),i=this.readlineInterface;i.question(r,n=>{o(n.trim()),i.close()})})}promtUserUntilValidInput(e,o,r){return a(this,null,function*(){let i,n=!1;do i=yield this.promptUserInput(e),n=o(i),!n&&r&&this.out(r);while(!n);return i})}get readlineInterface(){return _readline2.default.createInterface({input:process.stdin,output:process.stdout})}messageToColoredString({text:e,type:o}){switch(o){case"success":return _chalk2.default.green.bold(e);case"info":return _chalk2.default.whiteBright(e);case"error":return _chalk2.default.red.bold(e);case"prompt":return _chalk2.default.cyan.bold(e);default:return e}}},s=new D;var _axios = require('axios'); var _axios2 = _interopRequireDefault(_axios);var k=class{constructor(){this.httpClient=_axios2.default}get(e,o,r){return this.httpClient.get(e,{params:o,headers:r})}downloadVideoFile(e){return this.httpClient.get(e,{responseType:"stream"})}},u=new k;function v(t,e,o){return a(this,null,function*(){let r=_fs.createWriteStream.call(void 0, e);s.out({text:`Downloading ${o} from 
${t}`,type:"info"});let{data:i}=yield u.downloadVideoFile(t);return new Promise((n,d)=>{i.pipe(r);let l=null;r.on("error",c=>{l=c,r.close(),d(c)}),r.on("close",()=>{l||n()})})})}var _jsdom = require('jsdom');function w(e){return a(this,arguments,function*({data:t}){let{window:{document:o}}=new (0, _jsdom.JSDOM)(t);return o})}function f(t,e){return`${++t} ${W(e)}`}function W(t){return t.replace(/[/:*?"<>|~#%&+{}\-\\]/g,"")}var C=class{getAuthHeaders(){return a(this,null,function*(){return this.authHeaders||(this.authHeaders=(yield this.loadTokensFromFile())||(yield this.promptUserForTokens())),this.authHeaders})}loadTokensFromFile(){return a(this,null,function*(){let e=`${__dirname}/cookie.token`,o=`${__dirname}/csrf.token`;if(!_fs.existsSync.call(void 0, e)||!_fs.existsSync.call(void 0, o))return;try{let r=yield _fs.promises.readFile(e),i=yield _fs.promises.readFile(o),n={"csrf-token":i.toString(),cookie:r.toString()};if(!n.cookie||!n["csrf-token"])throw"Invalid tokens!";return n}catch(r){s.out({text:r.toString(),type:"error"})}})}promptUserForTokens(){return a(this,null,function*(){let e=yield s.promtUserUntilValidInput({text:"Please enter CSRF token:",type:"prompt"},Boolean),o=yield s.promtUserUntilValidInput({text:"Please enter the cookie:",type:"prompt"},Boolean);return{"csrf-token":e,cookie:o}})}},h=new C;function b(t,e){return a(this,null,function*(){var d;let o=Array.from(t.querySelectorAll('code[style="display: none"]')).find(l=>{var c;return(c=l.textContent)==null?void 0:c.includes("exerciseFiles")});o||s.out({text:"No exercises found for the course.",type:"info"});let r=JSON.parse(o.textContent),i=r.included.find(l=>Boolean(l.exerciseFiles));(!i||!((d=i.exerciseFiles)==null?void 0:d.length))&&s.out({text:"No exercises found for the course.",type:"info"});let n=0;yield Promise.all(i.exerciseFiles.map((l,c)=>J(l,e,c).then(m=>s.out({text:`${m} has been downloaded.
 Download progress: ${++n} / ${i.exerciseFiles.length}`,type:"success"})).catch(m=>s.out({text:m,type:"error"}))))})}function J(t,e,o){return a(this,null,function*(){let r=f(o,t.name),i=t.url;return yield v(i,`${e}/${r}`,r),r})}function T(t,e,o){return a(this,null,function*(){var r;try{let{data:i}=yield u.get("https://www.linkedin.com/learning-api/videos",e,o),n={title:t.title,progressiveStreams:i.elements.map(d=>d.presentation.videoPlay.videoPlayMetadata.progressiveStreams).reduce((d,l)=>[...d,...l],[])};return n}catch(i){throw s.out({text:`Could not locate downloadable video with 
https://www.linkedin.com/learning-api/videos?parentSlug=${e.parentSlug}&q=slugs&slug=${e.slug}
Make sure the video is not behind a premium lock. Response status: ${(r=i.response)==null?void 0:r.status}`,type:"error"}),i}})}function H(t){return a(this,null,function*(){let{parentSlug:e}=t,o="slugs",r=yield h.getAuthHeaders(),i=4e4,n=30,d=0,l,c=[];do{l=t.videos.slice(d,d+n),d+=n;let m=yield Promise.all(l.map(p=>a(this,null,function*(){return T(p,{parentSlug:e,q:o,slug:p.slug},r)})));l.length===n&&(yield new Promise(p=>{s.out({text:`
Sleeping for ${i/1e3} seconds to prevent 429 server error
`,type:"info"}),setTimeout(()=>p(!0),i)})),c.push(...m)}while(l.length);return c})}function L(t,e){return a(this,null,function*(){var n;let o;o=(n=t.match(/\/([^/]+)$/))==null?void 0:n[1];let r=e.title,i=Array.from(e.querySelectorAll(".video__link")).map(d=>{var l,c,m,p;return{title:(c=(l=d.querySelector(".video__title"))==null?void 0:l.textContent)==null?void 0:c.trim(),slug:(p=(m=d.getAttribute("href"))==null?void 0:m.match(/\/([^/]+)\?/))==null?void 0:p[1].trim()}});return{listName:r,parentSlug:o,videos:i}})}function M(t){return/^https?:\/\/(www\.)?linkedin\.com\/learning\/[a-z\-_\d]+$/.test(t)}function P(){return a(this,null,function*(){return s.promtUserUntilValidInput({text:`
Please enter url to a linkedin course you would like to download?
      i.e. https://www.linkedin.com/learning/critical-thinking-for-better-judgment-and-decision-making
`,type:"prompt"},t=>M(t),{text:"Invalid course url entered, enter a valid one.",type:"error"})})}function R(t){return a(this,null,function*(){let e="";do{let o=yield s.promptUserInput({text:`
Please enter the path to the download folder:
`,type:"prompt"});if(/^\..+$/.test(o)&&(o=`${t}/${/[\\/]/.test(o[1])?o.slice(2):o}`),!_fs.existsSync.call(void 0, o)){s.out({text:`
Error: folder does not exist!`,type:"error"});continue}e=o}while(!e);return e})}function $(t){return a(this,null,function*(){let e=t.reduce((r,i)=>[...r,i.progressiveStreams.map(({width:n})=>n)],[]),o=t[0].progressiveStreams.map(({width:r})=>r).filter(r=>e.every(i=>i.includes(r)));return Number.parseInt(yield s.promtUserUntilValidInput({text:`
Please, select desired video width: ${o.join(", ")}: `,type:"prompt"},r=>o.map(String).includes(r)))})}function N(t){return t.reduce((e,o,r)=>{let i=E(o.transcriptStartAt),n=r===t.length-1;if(n)i+=`
`;else{let l=E(t[r+1].transcriptStartAt);i+=` --> ${l}
`}let d=`${++r}
${i}${o.caption}

`;return e+d},"")}function E(t){let e=(t%1e3).toLocaleString("en-US",{minimumIntegerDigits:3,useGrouping:!1}),o=Math.trunc(t/1e3).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1}),r=Math.trunc(t/1e3/60).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1}),i=Math.trunc(t/1e3/60/60).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1});return`${i}:${r}:${o},${e}`}function O(t){let e=Array.from(t.querySelectorAll('code[style="display: none"]')).find(i=>{var n;return(n=i.textContent)==null?void 0:n.includes("transcriptStartAt")}),o=JSON.parse(e.textContent.replace(/&quot/g,'"')),{lines:r}=o.included.find(({lines:i})=>Boolean(i));return r||[]}function V(t){return a(this,null,function*(){let e=yield h.getAuthHeaders();return u.get(t,void 0,e).then(w).then(O).then(N)})}function y(t,e){return/\/$/.test(t)?`${t}${e}`:`${t}/${e}`}function q(t,e,o){return a(this,null,function*(){let r=yield s.promtUserUntilValidInput({text:"Download subtitles? (y/n) ",type:"prompt"},i=>/^[yn]$/i.test(i));if(/^y$/i.test(r)){let i=0,n=t.videos.length;yield Promise.all(t.videos.map((m,p)=>a(this,[m,p],function*({title:d,slug:l},c){let x=`${f(c,d)}.srt`;try{let g=yield V(`${e}/${l}`);if(!g)throw"Could not find/parse subtitles";let B=y(o,x);yield _fs.promises.writeFile(B,g),++i,s.out({text:`File successfully downloaded: ${x}`,type:"success"}),s.out({text:`Subtitles downloaded: ${i} / ${n}`,type:"success"})}catch(g){s.out({text:`Could not get subtitles for ${x}: ${g.toString()}`,type:"error"})}}))),s.out({text:`
Finished downloading subtitles: ${i} / ${t.videos.length}.`,type:"success"})}})}function _(t,e,o){return a(this,null,function*(){let r=0,i=t.length,n=[];yield Promise.all(t.map((d,l)=>a(this,null,function*(){let c=d.progressiveStreams.find(({width:g})=>g===e),m=`${f(l,d.title)}.${c.mediaType.split("/")[1]}`,p=c==null?void 0:c.streamingLocations[0].url,x=y(o,m);try{yield v(p,x,m),++r,s.out({text:`File successfully downloaded: ${m}`,type:"success"}),s.out({text:`Downloads progress: ${r} / ${i}`,type:"info"})}catch(g){s.out({text:`Error saving video ${m}: ${g.toString()}`,type:"error"}),n.push(`${m}
${p}`)}}))),s.out({text:`
Finished downloading videos: ${r} / ${t.length}`,type:"success"}),n.length&&s.out({text:`
Unfortunately, ${n.length} videos could not be downloaded: ${n.join(`
`)}`,type:"error"})})}function F(t){return a(this,null,function*(){let e=yield P(),o=yield u.get(e).then(w),r=yield L(e,o);s.out({text:Y(r.videos),type:"success"});let i=yield H(r),n=yield $(i);s.out({text:`Selected video width: ${n}`,type:"success"});let d=yield R(t);s.out({text:`Download path: ${d}`,type:"success"}),yield _(i,n,d);let l=yield h.getAuthHeaders(),c=yield u.get(e,void 0,l).then(w);yield b(c,d),yield q(r,e,d)})}function Y(t){return`
Found ${t.length} videos:

${t.map(({title:e},o)=>`${++o}. ${e}.`).join(`
`)}`}function A(){return a(this,null,function*(){s.out({text:`
Welcome to the Linkedin learning videos downloade v1!`,type:"info"});let t=!1;do{yield F(__dirname);let e=yield s.promtUserUntilValidInput({text:"Download another course? (y/n) ",type:"prompt"},o=>/^[yn]$/i.test(o));t=/^n$/i.test(e)}while(!t);s.out({text:"Bye bye!",type:"info"}),process.exit()})}A();
