"use strict"; function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var a=(t,e,o)=>new Promise((r,i)=>{var n=c=>{try{d(o.next(c))}catch(m){i(m)}},l=c=>{try{d(o.throw(c))}catch(m){i(m)}},d=c=>c.done?r(c.value):Promise.resolve(c.value).then(n,l);d((o=o.apply(t,e)).next())});var _readline = require('readline'); var _readline2 = _interopRequireDefault(_readline);var _chalk = require('chalk'); var _chalk2 = _interopRequireDefault(_chalk);var $=class{out(e){let o=this.messageToColoredString(e);console.log(o)}promptUserInput(e){return new Promise(o=>{let r=this.messageToColoredString(e),i=this.readlineInterface;i.question(r,n=>{o(n.trim()),i.close()})})}promtUserUntilValidInput(e,o,r){return a(this,null,function*(){let i,n=!1;do i=yield this.promptUserInput(e),n=o(i),!n&&r&&this.out(r);while(!n);return i})}get readlineInterface(){return _readline2.default.createInterface({input:process.stdin,output:process.stdout})}messageToColoredString({text:e,type:o}){switch(o){case"success":return _chalk2.default.green.bold(e);case"info":return _chalk2.default.whiteBright(e);case"error":return _chalk2.default.red.bold(e);case"prompt":return _chalk2.default.cyan.bold(e);default:return e}}},s=new $;var _axios = require('axios'); var _axios2 = _interopRequireDefault(_axios);var k=class{constructor(){this.httpClient=_axios2.default}get(e,o,r){return this.httpClient.get(e,{params:o,headers:r})}downloadVideoFile(e){return this.httpClient.get(e,{responseType:"stream"})}},f=new k;function A(t,e,o){return a(this,null,function*(){var r;try{let{data:i}=yield f.get("https://www.linkedin.com/learning-api/videos",e,o),n={title:t.title,progressiveStreams:i.elements.map(l=>l.presentation.videoPlay.videoPlayMetadata.progressiveStreams).reduce((l,d)=>[...l,...d],[])};return n}catch(i){throw s.out({text:`Could not locate downloadable video with 
https://www.linkedin.com/learning-api/videos?parentSlug=${e.parentSlug}&q=slugs&slug=${e.slug}
Make sure the video is not behind a premium lock. Response status: ${(r=i.response)==null?void 0:r.status}`,type:"error"}),i}})}var _fs = require('fs');var F=class{getAuthHeaders(){return a(this,null,function*(){return this.authHeaders||(this.authHeaders=(yield this.loadTokensFromFile())||(yield this.promptUserForTokens())),this.authHeaders})}loadTokensFromFile(){return a(this,null,function*(){let e=`${__dirname}/cookie.token`,o=`${__dirname}/csrf.token`;if(!_fs.existsSync.call(void 0, e)||!_fs.existsSync.call(void 0, o))return;try{let r=yield _fs.promises.readFile(e),i=yield _fs.promises.readFile(o),n={"csrf-token":i.toString(),cookie:r.toString()};if(!n.cookie||!n["csrf-token"])throw"Invalid tokens!";return n}catch(r){s.out({text:r.toString(),type:"error"})}})}promptUserForTokens(){return a(this,null,function*(){let e=yield s.promtUserUntilValidInput({text:"Please enter CSRF token:",type:"prompt"},Boolean),o=yield s.promtUserUntilValidInput({text:"Please enter the cookie:",type:"prompt"},Boolean);return{"csrf-token":e,cookie:o}})}},h=new F;function U(t){return a(this,null,function*(){let{parentSlug:e}=t,o="slugs",r=yield h.getAuthHeaders(),i=4e4,n=30,l=0,d,c=[];do{d=t.videos.slice(l,l+n),l+=n;let m=yield Promise.all(d.map(p=>a(this,null,function*(){return A(p,{parentSlug:e,q:o,slug:p.slug},r)})));d.length===n&&(yield new Promise(p=>{s.out({text:`
Sleeping for ${i/1e3} seconds to prevent 429 server error
`,type:"info"}),setTimeout(()=>p(!0),i)})),c.push(...m)}while(d.length);return c})}var _jsdom = require('jsdom');function C(t){return a(this,null,function*(){var l;let e;e=(l=t.match(/\/([^/]+)$/))==null?void 0:l[1];let{data:o}=yield f.get(t),{window:{document:r}}=new (0, _jsdom.JSDOM)(o),i=r.title,n=Array.from(r.querySelectorAll(".video__link")).map(d=>{var c,m,p,u;return{title:(m=(c=d.querySelector(".video__title"))==null?void 0:c.textContent)==null?void 0:m.trim(),slug:(u=(p=d.getAttribute("href"))==null?void 0:p.match(/\/([^/]+)\?/))==null?void 0:u[1].trim()}});return{listName:i,parentSlug:e,videos:n}})}function T(t){return/^https?:\/\/(www\.)?linkedin\.com\/learning\/[a-z\-_\d]+$/.test(t)}function y(){return a(this,null,function*(){return s.promtUserUntilValidInput({text:`
Please enter url to a linkedin course you would like to download?
      i.e. https://www.linkedin.com/learning/critical-thinking-for-better-judgment-and-decision-making
`,type:"prompt"},t=>T(t),{text:"Invalid course url entered, enter a valid one.",type:"error"})})}function L(t){return a(this,null,function*(){let e="";do{let o=yield s.promptUserInput({text:`
Please enter the path to the download folder:
`,type:"prompt"});if(/^\..+$/.test(o)&&(o=`${t}/${/[\\/]/.test(o[1])?o.slice(2):o}`),!_fs.existsSync.call(void 0, o)){s.out({text:`
Error: folder does not exist!`,type:"error"});continue}e=o}while(!e);return e})}function S(t){return a(this,null,function*(){let e=t.reduce((r,i)=>[...r,i.progressiveStreams.map(({width:n})=>n)],[]),o=t[0].progressiveStreams.map(({width:r})=>r).filter(r=>e.every(i=>i.includes(r)));return Number.parseInt(yield s.promtUserUntilValidInput({text:`
Please, select desired video width: ${o.join(", ")}: `,type:"prompt"},r=>o.map(String).includes(r)))})}function M(t){return t.reduce((e,o,r)=>{let i=H(o.transcriptStartAt),n=r===t.length-1;if(n)i+=`
`;else{let d=H(t[r+1].transcriptStartAt);i+=` --> ${d}
`}let l=`${++r}
${i}${o.caption}

`;return e+l},"")}function H(t){let e=(t%1e3).toLocaleString("en-US",{minimumIntegerDigits:3,useGrouping:!1}),o=Math.trunc(t/1e3).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1}),r=Math.trunc(t/1e3/60).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1}),i=Math.trunc(t/1e3/60/60).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1});return`${i}:${r}:${o},${e}`}function R(t){let{window:{document:e}}=new (0, _jsdom.JSDOM)(t),o=Array.from(e.querySelectorAll('code[style="display: none"]')).find(n=>{var l;return(l=n.textContent)==null?void 0:l.includes("transcriptStartAt")}),r=JSON.parse(o.textContent.replace(/&quot/g,'"')),{lines:i}=r.included.find(({lines:n})=>Boolean(n));return i||[]}function b(t){return a(this,null,function*(){let e=yield h.getAuthHeaders();return f.get(t,void 0,e).then(({data:o})=>R(o)).then(M)})}function w(t,e){return`${++t} ${K(e)}`}function K(t){return t.replace(/[/:*?"<>|~#%&+{}\-\\]/g,"")}function v(t,e){return/\/$/.test(t)?`${t}${e}`:`${t}/${e}`}function O(t,e,o){return a(this,null,function*(){let r=yield s.promtUserUntilValidInput({text:"Download subtitles? (y/n) ",type:"prompt"},i=>/^[yn]$/i.test(i));if(/^y$/i.test(r)){let i=0,n=t.videos.length;yield Promise.all(t.videos.map((m,p)=>a(this,[m,p],function*({title:l,slug:d},c){let u=`${w(c,l)}.srt`;try{let g=yield b(`${e}/${d}`);if(!g)throw"Could not find/parse subtitles";let q=v(o,u);yield _fs.promises.writeFile(q,g),++i,s.out({text:`File successfully downloaded: ${u}`,type:"success"}),s.out({text:`Subtitles downloaded: ${i} / ${n}`,type:"success"})}catch(g){s.out({text:`Could not get subtitles for ${u}: ${g.toString()}`,type:"error"})}}))),s.out({text:`
Finished downloading subtitles: ${i} / ${t.videos.length}.`,type:"success"})}})}function E(t,e,o){return a(this,null,function*(){let r=_fs.createWriteStream.call(void 0, e);s.out({text:`Downloading ${o} from 
${t}`,type:"info"});let{data:i}=yield f.downloadVideoFile(t);return new Promise((n,l)=>{i.pipe(r);let d=null;r.on("error",c=>{d=c,r.close(),l(c)}),r.on("close",()=>{d||n()})})})}function _(t,e,o){return a(this,null,function*(){let r=0,i=t.length,n=[];yield Promise.all(t.map((l,d)=>a(this,null,function*(){let c=l.progressiveStreams.find(({width:g})=>g===e),m=`${w(d,l.title)}.${c.mediaType.split("/")[1]}`,p=c==null?void 0:c.streamingLocations[0].url,u=v(o,m);try{yield E(p,u,m),++r,s.out({text:`File successfully downloaded: ${m}`,type:"success"}),s.out({text:`Downloads progress: ${r} / ${i}`,type:"info"})}catch(g){s.out({text:`Error saving video ${m}: ${g.toString()}`,type:"error"}),n.push(`${m}
${p}`)}}))),s.out({text:`
Finished downloading videos: ${r} / ${t.length}`,type:"success"}),n.length&&s.out({text:`
Unfortunately, ${n.length} videos could not be downloaded: ${n.join(`
`)}`,type:"error"})})}function P(t){return a(this,null,function*(){let e=yield y(),o=yield C(e);s.out({text:Q(o.videos),type:"success"});let r=yield U(o),i=yield S(r);s.out({text:`Selected video width: ${i}`,type:"success"});let n=yield L(t);s.out({text:`Download path: ${n}`,type:"success"}),yield _(r,i,n),yield O(o,e,n)})}function Q(t){return`
Found ${t.length} videos:

${t.map(({title:e},o)=>`${++o}. ${e}.`).join(`
`)}`}function V(){return a(this,null,function*(){s.out({text:`
Welcome to the Linkedin learning videos downloade v1!`,type:"info"});let t=!1;do{yield P(__dirname);let e=yield s.promtUserUntilValidInput({text:"Download another course? (y/n) ",type:"prompt"},o=>/^[yn]$/i.test(o));t=/^n$/i.test(e)}while(!t);s.out({text:"Bye bye!",type:"info"}),process.exit()})}V();
